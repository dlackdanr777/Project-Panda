using JetBrains.Annotations;
using System.Collections;
using System.Collections.Generic;
using System.Xml.Linq;
using Unity.VisualScripting;
using UnityEngine;

public class Inventory
{
    public int MaxInventoryItem { get; private set; } = 30; //inventory 최대 저장 개수
    public int MaxInventoryItemCount { get; private set; } = 10;//한 아이템당 최대 개수

    public List<InventoryItem> Items = new List<InventoryItem>();
    
    public int ItemsCount => Items.Count;
    
    public List<InventoryItem> GetInventoryList()
    {
        return Items;
    }

    public void Add(Item item)
    {
        //처음 생성
        if(Items.Count == 0)
        {
            InventoryItem addItem = new InventoryItem(item.Id, item.Name, item.Description, item.Image);
            Items.Add(addItem); //새로운 인벤토리 생성

        }
        else
        {
            for (int i = 0; i < Items.Count; i++)
            {
                if (Items[i].Id == item.Id) //id가 같은 아이템이 있다면
                {
                    if (Items[i].Count == MaxInventoryItemCount) //개수가 최대 개수와 같은지 확인
                    {
                        continue;
                    }
                    else
                    {
                        Items[i].Count++;
                        return;
                    }
                }
            }

            //최대 개수를 가진 아이템만 존재한다면 새로운 인벤토리 아이템 생성
            InventoryItem addItem = new InventoryItem(item.Id, item.Name, item.Description, item.Image);
            Items.Add(addItem); //새로운 인벤토리 생성

        }
    }

    public void RemoveByIndex(int index)
    {
        Items[index].Count--;
        if (Items[index].Count == 0)//0보다 작으면 아이템 삭제
        {
            Items.RemoveAt(index);
            if(Items.Count == 0)
            {
                Items.Clear();
            }
        }
    }
}
